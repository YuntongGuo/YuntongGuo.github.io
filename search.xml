<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Asian Culture Club-Diwali</title>
    <url>/11/29/2023/Asian-Culture-Club-Diwali/</url>
    <content><![CDATA[<h1 id="Asian-Culture-Club"><a href="#Asian-Culture-Club" class="headerlink" title="Asian Culture Club"></a>Asian Culture Club</h1><p>This is our third meeting of Asian Culture Club this year!</p>
<h2 id="Diwali"><a href="#Diwali" class="headerlink" title="Diwali"></a>Diwali</h2><h3 id="What-we-did"><a href="#What-we-did" class="headerlink" title="What we did?"></a>What we did?</h3><ol>
<li><p>Presentation</p>
 <iframe src="https://docs.google.com/presentation/d/e/2PACX-1vSNcUNsr0rtL8gJwPURHuZ8fFqAoDUlfwcu_ePtGdsLpLRuxdnJK3sr00BIeVICig/embed?start=false&loop=false&delayms=3000" frameborder="0" width="960" height="569" allowfullscreen="true" mozallowfullscreen="true" webkitallowfullscreen="true"></iframe>

</li>
<li><p>Taste Indian snaks</p>
</li>
<li><p>paint Diyas</p>
</li>
</ol>
]]></content>
      <tags>
        <tag>School</tag>
        <tag>Asian Culture Club</tag>
      </tags>
  </entry>
  <entry>
    <title>VEX writeup</title>
    <url>/11/29/2023/VEX-writeup/</url>
    <content><![CDATA[<h1 id="VEX-Robotics-57249C"><a href="#VEX-Robotics-57249C" class="headerlink" title="VEX Robotics 57249C"></a>VEX Robotics 57249C</h1><p>This is the code Write ups for 57249 C<br>The autonomous code using Jar Template</p>
<h1 id="User-Control"><a href="#User-Control" class="headerlink" title="User Control"></a>User Control</h1><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">usercontrol</span><span class="params">(<span class="type">void</span>)</span> </span>&#123;</span><br><span class="line">  cataMax = CataRotation.<span class="built_in">angle</span>(deg);</span><br><span class="line">  competitionBegin = Brain.<span class="built_in">timer</span>(sec);</span><br><span class="line">  <span class="comment">//printf(&quot;catamax: %d&quot;,cataMax);</span></span><br><span class="line">  <span class="comment">// User control code here, inside the loop</span></span><br><span class="line">  <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">    <span class="built_in">drivetrainControl</span>();    </span><br><span class="line">    <span class="built_in">IntakeControl</span>();</span><br><span class="line">    <span class="built_in">CatapultStart</span>();</span><br><span class="line">    <span class="built_in">PnumaticsControl</span>();    </span><br><span class="line">    <span class="built_in">PnumaticAControl</span>();</span><br><span class="line">    <span class="built_in">PnumaticBControl</span>();</span><br><span class="line">    <span class="built_in">autoPnumaticB</span>();</span><br><span class="line">    <span class="built_in">highHang</span>();</span><br><span class="line">    <span class="comment">// Sleep the task for a short amount of time to</span></span><br><span class="line">    <span class="comment">// prevent wasted resources.</span></span><br><span class="line">    <span class="built_in">wait</span>(<span class="number">20</span>, msec);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>In the user control, each loop is 20 milliseconds between to prevent overuse of resource.<br>The code called four functions for drive, intake, catapult, and pneumatic wings.</p>
<h3 id="Drivetrain-Control"><a href="#Drivetrain-Control" class="headerlink" title="Drivetrain Control"></a>Drivetrain Control</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">percentExponential</span><span class="params">(<span class="type">float</span> value, <span class="type">int</span> ExpType =<span class="number">1</span>)</span></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(ExpType == <span class="number">1</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">pow</span>(value,<span class="number">3</span>)/<span class="built_in">pow</span>(<span class="number">100</span>,<span class="number">2</span>);</span><br><span class="line">  &#125;<span class="keyword">else</span> <span class="keyword">if</span> (ExpType == <span class="number">2</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(value&gt;<span class="number">1</span>)&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="number">.2</span>*value+<span class="number">1.2</span>*<span class="built_in">pow</span>(<span class="number">1.043</span>, value)<span class="number">-1.2</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span> (value&lt;<span class="number">-1</span>)&#123;</span><br><span class="line">      <span class="keyword">return</span> -(<span class="number">.2</span>*<span class="built_in">fabs</span>(value)+<span class="number">1.2</span>*<span class="built_in">pow</span>(<span class="number">1.043</span>, <span class="built_in">fabs</span>(value))<span class="number">-1.2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;<span class="keyword">else</span> <span class="keyword">if</span> (ExpType == <span class="number">3</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span>(value&gt;<span class="number">5</span>)&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="number">101.8</span>/(<span class="number">1</span>+<span class="built_in">pow</span>(<span class="number">2.72</span>,-((value<span class="number">-60</span>)/<span class="number">10</span>)));</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span> (value&lt;<span class="number">-5</span>)&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="number">-101.8</span>/(<span class="number">1</span>+<span class="built_in">pow</span>(<span class="number">2.72</span>,-((<span class="built_in">fabs</span>(value)<span class="number">-60</span>)/<span class="number">10</span>)));</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>The percentExpenential function takes in a integer and return a value modified by a exponential function. </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">drivetrainControl</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="type">double</span> motorForwardSpeed = <span class="built_in">percentExponential</span>(<span class="built_in">controller</span>(primary).Axis3.<span class="built_in">position</span>(pct),<span class="number">2</span>);</span><br><span class="line">  <span class="type">double</span> motorTurnSpeed = <span class="built_in">percentExponential</span>(<span class="built_in">controller</span>(primary).Axis1.<span class="built_in">position</span>(pct)*<span class="number">.85</span>,<span class="number">2</span>);</span><br><span class="line">  <span class="comment">// forward and back</span></span><br><span class="line">  chassis.DriveL.<span class="built_in">spin</span>(fwd, (motorForwardSpeed + motorTurnSpeed)*<span class="number">12</span>/<span class="number">100</span>,volt);</span><br><span class="line">  chassis.DriveR.<span class="built_in">spin</span>(fwd,(motorForwardSpeed - motorTurnSpeed)*<span class="number">12</span>/<span class="number">100</span>,volt);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>I read the value on two axis, then decrease the value of turning by multiply .85<br>Then I put the result value in percent Exponential function to create exponential drive. It make the bot easier to control.<br>Use the minus and plus to combine the turning and forward.<br>Then convert this value into voltage and spin the motor by voltage.</p>
<h3 id="Intake"><a href="#Intake" class="headerlink" title="Intake"></a>Intake</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">IntakeControl</span><span class="params">()</span></span>&#123;</span><br><span class="line">   <span class="comment">// intake</span></span><br><span class="line">    <span class="type">int</span> IntakeSpeed = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">controller</span>(primary).ButtonL1.<span class="built_in">pressing</span>())&#123;</span><br><span class="line">      IntakeSpeed=<span class="number">100</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">controller</span>(primary).ButtonL2.<span class="built_in">pressing</span>())&#123;</span><br><span class="line">      IntakeSpeed=<span class="number">-100</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    Intake.<span class="built_in">spin</span>(fwd,IntakeSpeed,vex::velocityUnits::pct);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>For intake control, if the L1 button is pressed the intake will spin positive at max speed to the intake triball, while the L2 button pressed, the intake will spin negative direction and remove the triball on the bot. </p>
<h3 id="Catapult"><a href="#Catapult" class="headerlink" title="Catapult"></a>Catapult</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">CatapultControl</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="comment">// cata</span></span><br><span class="line">    <span class="comment">// catamove = 0 : hold down</span></span><br><span class="line">    <span class="comment">// catamove = 1 : move down</span></span><br><span class="line">    <span class="comment">// catamove = 2 : releasing</span></span><br><span class="line">    <span class="comment">// catamove = 3 : released  </span></span><br><span class="line">    <span class="comment">//printf(&quot;cata %d, %f, max is %f\n&quot;,cataMove,CataRotation.angle(deg),cataMax);</span></span><br><span class="line">         <span class="comment">// printf(&quot;loop-------------------- %f\n&quot;,CataRotation.angle(deg));</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(CataRotation.<span class="built_in">angle</span>(deg)&gt;=cataMax<span class="number">-3</span> &amp;&amp; CataRotation.<span class="built_in">angle</span>(deg)&lt;=cataMax+<span class="number">3</span>&amp;&amp;cataMove!=<span class="number">1</span>)&#123;</span><br><span class="line">      <span class="comment">//printf(&quot;current angle: %f\n&quot;,CataRotation.angle(deg));</span></span><br><span class="line">      <span class="comment">// end release</span></span><br><span class="line">      cataMove = <span class="number">1</span>;      </span><br><span class="line">      </span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot; %d\n&quot;</span>,auton_tribal); </span><br><span class="line">      <span class="comment">//printf(&quot;target %f\n&quot;,cataMax); </span></span><br><span class="line">      <span class="comment">//printf(&quot;current----------- %f\n&quot;,CataRotation.angle(deg));</span></span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;end release\n&quot;</span>);</span><br><span class="line">       </span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(Distance.<span class="built_in">objectDistance</span>(mm)&lt;=<span class="number">5</span> &amp;&amp; cataMove == <span class="number">0</span>)&#123;</span><br><span class="line">      <span class="comment">// start release</span></span><br><span class="line">      cataMove = <span class="number">2</span>; </span><br><span class="line">      Catapult.<span class="built_in">spin</span>(fwd, <span class="number">-100</span>, pct);</span><br><span class="line">      chassis.DriveL.<span class="built_in">stop</span>(hold);</span><br><span class="line">      chassis.DriveR.<span class="built_in">stop</span>(hold);</span><br><span class="line">      auton_tribal = auton_tribal + <span class="number">1</span>;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;start release\n&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>((CataRotation.<span class="built_in">angle</span>(deg)&lt;=<span class="number">5</span>||CataRotation.<span class="built_in">angle</span>(deg)&gt;=<span class="number">355</span>) &amp;&amp; (cataMove==<span class="number">1</span>))&#123;</span><br><span class="line">      <span class="keyword">if</span>(Distance.<span class="built_in">objectDistance</span>(mm)&lt;=<span class="number">5</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;block diurect fire\n&quot;</span>);</span><br><span class="line">        cataMove = <span class="number">2</span>; </span><br><span class="line">        Catapult.<span class="built_in">spin</span>(fwd, <span class="number">-100</span>, pct);</span><br><span class="line">        chassis.DriveL.<span class="built_in">stop</span>(hold);</span><br><span class="line">        chassis.DriveR.<span class="built_in">stop</span>(hold);</span><br><span class="line">        auton_tribal = auton_tribal + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">//rest</span></span><br><span class="line">      cataMove = <span class="number">0</span>;</span><br><span class="line">      Catapult.<span class="built_in">stop</span>(hold); </span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;rest\n&quot;</span>);</span><br><span class="line">      <span class="comment">//Catapult.spinFor(fwd,3,deg);</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(cataMove==<span class="number">1</span>)&#123;</span><br><span class="line">      Catapult.<span class="built_in">spin</span>(fwd,<span class="number">-12</span>,volt);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>I use the cataMove Global value to store the current state of the catapult.<br>In the code, I have an if else statement that calculate the action that catapult should do when the button pressed or an specific angle has reached based on current state of the catapult.<br>If the catapult released, and button pressed, catapult start moving down by spinning motor<br>If the catapult complete the release(reach the released angle), change the state to released and stop the motor.<br>If in hold down mode, when button pressed, the motor will spin and release the catapult.<br>Then change the state to releasing.<br>If the catapult reach the angle that is holding down, change the state to hold down and hold the motor.<br>In a separate if statement, If the state is moving catapult down, spin the motor at max speed. </p>
<h3 id="Pneumatics-Wing"><a href="#Pneumatics-Wing" class="headerlink" title="Pneumatics Wing"></a>Pneumatics Wing</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">bool</span> PneumaticAState = <span class="literal">false</span>;</span><br><span class="line"><span class="type">double</span> PneumaticACooldown = Brain.<span class="built_in">timer</span>(sec);</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>The first variable is to store the current state of side wings<br>2nd is to store the time of last change in wings to prevent waste of air. </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">PnumaticAControl</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="comment">// Pnumatics</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">controller</span>(primary).ButtonY.<span class="built_in">pressing</span>()&amp;&amp;Brain.<span class="built_in">timer</span>(sec)-PneumaticACooldown&gt;=<span class="number">.3</span>)&#123;</span><br><span class="line">      PneumaticACooldown= Brain.<span class="built_in">timer</span>(sec);</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;use\n&quot;</span>);</span><br><span class="line">      <span class="keyword">if</span>(PneumaticAState)&#123;</span><br><span class="line">        PneumaticAState = !PneumaticAState;</span><br><span class="line">        PneumaticA.<span class="built_in">set</span>(<span class="literal">false</span>);</span><br><span class="line">      &#125;<span class="keyword">else</span> <span class="keyword">if</span>(!PneumaticAState)&#123;</span><br><span class="line">        PneumaticAState = !PneumaticAState;</span><br><span class="line">        PneumaticA.<span class="built_in">set</span>(<span class="literal">true</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>If the button is pressed and the time from last release&#x2F;retract the pneumatics wings is greater than .7 second(Cooldown).<br>Then judge whether current side wings is released or retracted.<br>If is released, then call Pneumatics off function to retract the wings<br>If retracted then call Pneumatics on function to release the wings<br>Then change the state of the side.</p>
<h1 id="Autonomous"><a href="#Autonomous" class="headerlink" title="Autonomous"></a>Autonomous</h1><p>Using <a href="https://jacksonarearobotics.github.io/JAR-Template/">JAR-Template</a><br>Jackson area robotics<br>I configure the bot to the template<br>In the autonomous part, I call the function for moving the bot<br>forward for specific distance or Turn an accurate degree. </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">chassis.<span class="built_in">drive_distance</span>(<span class="number">24</span>);</span><br><span class="line">chassis.<span class="built_in">turn_to_angle</span>(<span class="number">90</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="Far-side-4-tribal"><a href="#Far-side-4-tribal" class="headerlink" title="Far side (4 tribal)"></a>Far side (4 tribal)</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">chassis.drive_max_voltage = <span class="number">12</span>;</span><br><span class="line">chassis.turn_max_voltage = <span class="number">12</span>;</span><br><span class="line">Intake.<span class="built_in">spin</span>(fwd,<span class="number">10</span>,volt);</span><br><span class="line">chassis.<span class="built_in">drive_distance</span>(<span class="number">-45</span>);</span><br><span class="line">Intake.<span class="built_in">stop</span>();</span><br><span class="line">Intake.<span class="built_in">spin</span>(fwd,<span class="number">-7</span>,volt);</span><br><span class="line">chassis.drive_max_voltage = <span class="number">12</span>;</span><br><span class="line">chassis.<span class="built_in">drive_distance</span>(<span class="number">20</span>);</span><br><span class="line">chassis.<span class="built_in">turn_to_angle</span>(<span class="number">-45</span>);</span><br><span class="line">Intake.<span class="built_in">spin</span>(fwd,<span class="number">12</span>,volt);</span><br><span class="line">chassis.drive_max_voltage = <span class="number">12</span>;</span><br><span class="line">chassis.<span class="built_in">drive_distance</span>(<span class="number">-35</span>);</span><br><span class="line">chassis.<span class="built_in">right_swing_to_angle</span>(<span class="number">-95</span>);</span><br><span class="line"><span class="comment">// change to -90</span></span><br><span class="line">chassis.<span class="built_in">drive_distance</span>(<span class="number">-4</span>);</span><br><span class="line">PneumaticA.<span class="built_in">set</span>(<span class="literal">true</span>);</span><br><span class="line">PneumaticH.<span class="built_in">set</span>(<span class="literal">true</span>);</span><br><span class="line"><span class="built_in">wait</span>(<span class="number">.2</span>, sec);</span><br><span class="line">chassis.<span class="built_in">drive_distance</span>(<span class="number">35</span>,chassis.desired_heading,<span class="number">10</span>,<span class="number">6</span>,<span class="number">1</span>,<span class="number">100</span>,<span class="number">1500</span>);</span><br><span class="line">PneumaticA.<span class="built_in">set</span>(<span class="literal">false</span>);</span><br><span class="line">PneumaticH.<span class="built_in">set</span>(<span class="literal">false</span>);</span><br><span class="line">chassis.<span class="built_in">drive_distance</span>(<span class="number">-10</span>);</span><br><span class="line">chassis.<span class="built_in">set_heading</span>(<span class="number">0</span>);</span><br><span class="line">chassis.turn_max_voltage=<span class="number">8</span>;</span><br><span class="line">chassis.<span class="built_in">turn_to_angle</span>(<span class="number">180</span>);</span><br><span class="line">Intake.<span class="built_in">spin</span>(fwd,<span class="number">-10</span>,volt);</span><br><span class="line">chassis.<span class="built_in">drive_distance</span>(<span class="number">-20</span>,chassis.desired_heading,<span class="number">12</span>,<span class="number">6</span>,<span class="number">1</span>,<span class="number">100</span>,<span class="number">500</span>);</span><br><span class="line">Intake.<span class="built_in">stop</span>();</span><br></pre></td></tr></table></figure>
<p>set volt for drive and turn.<br>intake to hold the tribal<br>drive forward,<br>drop the tribal and move backward,<br>turn to the bar move forward and grab the triball<br>open Pneumatics and push 2 tribal in to goal (include the one dropped)<br>move backward turn and drop the triball .<br>extake and push it into goal.<br>intake stop.</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">chassis.turn_max_voltage = <span class="number">12</span>;</span><br><span class="line">chassis.<span class="built_in">drive_distance</span>(<span class="number">20</span>);</span><br><span class="line">chassis.<span class="built_in">turn_to_angle</span>(<span class="number">-35</span>);</span><br><span class="line">Intake.<span class="built_in">spin</span>(fwd,<span class="number">12</span>,volt);</span><br><span class="line">chassis.<span class="built_in">drive_distance</span>(<span class="number">-20</span>);</span><br><span class="line">chassis.<span class="built_in">drive_distance</span>(<span class="number">25</span>);</span><br><span class="line">chassis.turn_max_voltage = <span class="number">8</span>;</span><br><span class="line">chassis.<span class="built_in">turn_to_angle</span>(<span class="number">180</span>);</span><br><span class="line">Intake.<span class="built_in">spin</span>(fwd,<span class="number">-12</span>,volt);</span><br><span class="line">chassis.<span class="built_in">drive_distance</span>(<span class="number">-20</span>,chassis.desired_heading,<span class="number">12</span>,<span class="number">6</span>,<span class="number">1</span>,<span class="number">100</span>,<span class="number">600</span>);</span><br><span class="line">chassis.turn_max_voltage=<span class="number">12</span>;</span><br><span class="line">chassis.<span class="built_in">drive_distance</span>(<span class="number">20</span>);</span><br><span class="line">chassis.<span class="built_in">right_swing_to_angle</span>(<span class="number">-40</span>);</span><br><span class="line">chassis.<span class="built_in">drive_distance</span>(<span class="number">-50</span>);</span><br></pre></td></tr></table></figure>
<p>go back and turn to the tribal on the side.<br>move forward to grab it.<br>go back, turn to the goal and extake<br>push it in.<br>move back. turn to the elevation bar.<br>move at full speed to touch it.</p>
<h2 id="close-side"><a href="#close-side" class="headerlink" title="close side"></a>close side</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">chassis.<span class="built_in">set_coordinates</span>(<span class="number">0</span>, <span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">  chassis.drive_max_voltage = <span class="number">12</span>;</span><br><span class="line">  chassis.turn_max_voltage = <span class="number">12</span>;</span><br><span class="line">  Intake.<span class="built_in">spin</span>(fwd,<span class="number">10</span>,volt);</span><br><span class="line">  chassis.<span class="built_in">drive_distance</span>(<span class="number">-7</span>);</span><br><span class="line">  PneumaticH.<span class="built_in">set</span>(<span class="literal">true</span>);</span><br><span class="line">  <span class="built_in">wait</span>(<span class="number">.3</span>, sec);</span><br><span class="line">  chassis.<span class="built_in">set_heading</span>(<span class="number">45</span>);</span><br><span class="line">  <span class="comment">//chassis.turn_to_angle(0,8);</span></span><br><span class="line">  chassis.<span class="built_in">drive_distance</span>(<span class="number">10</span>,<span class="number">0</span>,<span class="number">3</span>,<span class="number">3</span>);</span><br><span class="line">  PneumaticH.<span class="built_in">set</span>(<span class="literal">false</span>);</span><br><span class="line">  <span class="built_in">wait</span>(<span class="number">.2</span>,sec);</span><br></pre></td></tr></table></figure>
<p>SET voltage<br>star intake to grab tribal<br>move back and expand Pneumatic<br>wait expand<br>move forwarded and turning to unload<br>retract Pneumatic</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">chassis.<span class="built_in">turn_to_angle</span>(<span class="number">60</span>);</span><br><span class="line">chassis.<span class="built_in">drive_distance</span>(<span class="number">-17</span>);</span><br><span class="line">chassis.<span class="built_in">right_swing_to_angle</span>(<span class="number">93</span>);</span><br><span class="line">Intake.<span class="built_in">stop</span>();</span><br><span class="line">Intake.<span class="built_in">spin</span>(fwd,<span class="number">-7</span>,volt);</span><br><span class="line">chassis.<span class="built_in">drive_distance</span>(<span class="number">-20</span>,chassis.desired_heading,<span class="number">10</span>,<span class="number">6</span>,<span class="number">1</span>,<span class="number">100</span>,<span class="number">300</span>);</span><br><span class="line">chassis.<span class="built_in">drive_distance</span>(<span class="number">12</span>);</span><br></pre></td></tr></table></figure>
<p>turn toward goal.<br>move forward<br>turn toward the side of goal<br>extake and push it in<br>move back </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">chassis.<span class="built_in">set_heading</span>(<span class="number">0</span>);</span><br><span class="line">chassis.<span class="built_in">turn_to_angle</span>(<span class="number">125</span>);</span><br><span class="line">chassis.<span class="built_in">drive_distance</span>(<span class="number">-30</span>);</span><br><span class="line">chassis.<span class="built_in">turn_to_angle</span>(<span class="number">-90</span>);</span><br><span class="line">chassis.<span class="built_in">drive_distance</span>(<span class="number">28</span>);</span><br><span class="line">chassis.<span class="built_in">drive_distance</span>(<span class="number">-28</span>);</span><br><span class="line">chassis.<span class="built_in">turn_to_angle</span>(<span class="number">0</span>);</span><br><span class="line">chassis.<span class="built_in">drive_distance</span>(<span class="number">-25</span>);</span><br><span class="line">chassis.<span class="built_in">turn_to_angle</span>(<span class="number">105</span>);</span><br><span class="line">chassis.<span class="built_in">drive_distance</span>(<span class="number">-30</span>,chassis.desired_heading,<span class="number">10</span>,<span class="number">6</span>,<span class="number">1</span>,<span class="number">100</span>,<span class="number">1000</span>);</span><br></pre></td></tr></table></figure>
<p>move to the elevation bar.<br>push the tribal under the bar.<br>move back and go to the other side of the bar to touch the elevation bar.<br>this is to avoid pass the elevation bar(lead to lose auton)</p>
<h1 id="Skill"><a href="#Skill" class="headerlink" title="Skill"></a>Skill</h1><h2 id="Driving-Skill"><a href="#Driving-Skill" class="headerlink" title="Driving Skill"></a>Driving Skill</h2><p>use the same code as User Control</p>
<h2 id="Programming-Skill"><a href="#Programming-Skill" class="headerlink" title="Programming Skill"></a>Programming Skill</h2><p>use a distance sensor to detect the tribal on the puncher.<br>count the number of punches. After 44 punches, move to the other side and expand Pneumatics and push for three times.<br>from a different angle.</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">auton_skill</span><span class="params">()</span></span>&#123;</span><br><span class="line">  cataMax = CataRotation.<span class="built_in">angle</span>(deg);</span><br><span class="line">  chassis.drive_max_voltage = <span class="number">12</span>;</span><br><span class="line">  chassis.<span class="built_in">right_swing_to_angle</span>(<span class="number">-65</span>);</span><br><span class="line">  PneumaticA.<span class="built_in">set</span>(<span class="literal">true</span>);</span><br><span class="line">  Catapult.<span class="built_in">spin</span>(fwd, <span class="number">-100</span>, pct);</span><br><span class="line">  <span class="built_in">wait</span>(<span class="number">40</span>, sec);</span><br><span class="line">  PneumaticA.<span class="built_in">set</span>(<span class="literal">false</span>);</span><br><span class="line">  Catapult.<span class="built_in">stop</span>(coast);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;end\n&quot;</span>);</span><br><span class="line">  chassis.<span class="built_in">drive_distance</span>(<span class="number">-20</span>);</span><br><span class="line">  chassis.<span class="built_in">turn_to_angle</span>(<span class="number">-135</span>);</span><br><span class="line">  chassis.<span class="built_in">drive_distance</span>(<span class="number">13</span>);</span><br><span class="line">  chassis.<span class="built_in">turn_to_angle</span>(<span class="number">133</span>);</span><br><span class="line">  chassis.<span class="built_in">drive_distance</span>(<span class="number">80</span>);</span><br><span class="line">  chassis.<span class="built_in">set_heading</span>(<span class="number">0</span>);</span><br><span class="line">  chassis.<span class="built_in">right_swing_to_angle</span>(<span class="number">-45</span>);</span><br><span class="line">  PneumaticA.<span class="built_in">set</span>(<span class="literal">true</span>);</span><br><span class="line">  PneumaticH.<span class="built_in">set</span>(<span class="literal">true</span>);</span><br><span class="line">  chassis.<span class="built_in">drive_distance</span>(<span class="number">15</span>);</span><br><span class="line">  chassis.<span class="built_in">right_swing_to_angle</span>(<span class="number">-80</span>);</span><br><span class="line">  chassis.<span class="built_in">drive_distance</span>(<span class="number">30</span>,chassis.desired_heading,<span class="number">12</span>,<span class="number">6</span>,<span class="number">1</span>,<span class="number">100</span>,<span class="number">1000</span>);</span><br><span class="line">  chassis.<span class="built_in">drive_distance</span>(<span class="number">-20</span>);</span><br><span class="line">  chassis.<span class="built_in">drive_distance</span>(<span class="number">30</span>,chassis.desired_heading,<span class="number">12</span>,<span class="number">6</span>,<span class="number">1</span>,<span class="number">100</span>,<span class="number">1000</span>);</span><br><span class="line">  chassis.<span class="built_in">drive_distance</span>(<span class="number">-18</span>);</span><br><span class="line">  PneumaticA.<span class="built_in">set</span>(<span class="literal">false</span>);</span><br><span class="line">  PneumaticH.<span class="built_in">set</span>(<span class="literal">false</span>);</span><br><span class="line">  chassis.<span class="built_in">right_swing_to_angle</span>(<span class="number">180</span>);</span><br><span class="line">  chassis.drive_max_voltage = <span class="number">6</span>;</span><br><span class="line">  chassis.turn_max_voltage = <span class="number">5</span>;</span><br><span class="line">  chassis.<span class="built_in">drive_distance</span>(<span class="number">30</span>);</span><br><span class="line">  chassis.<span class="built_in">left_swing_to_angle</span>(<span class="number">-45</span>);</span><br><span class="line">  PneumaticA.<span class="built_in">set</span>(<span class="literal">true</span>);</span><br><span class="line">  PneumaticH.<span class="built_in">set</span>(<span class="literal">true</span>);</span><br><span class="line">  chassis.<span class="built_in">drive_distance</span>(<span class="number">10</span>);</span><br><span class="line">  chassis.<span class="built_in">drive_distance</span>(<span class="number">20</span>,chassis.desired_heading,<span class="number">12</span>,<span class="number">6</span>,<span class="number">1</span>,<span class="number">100</span>,<span class="number">1000</span>);</span><br><span class="line">  chassis.drive_max_voltage = <span class="number">12</span>;</span><br><span class="line">  chassis.<span class="built_in">drive_distance</span>(<span class="number">-20</span>);</span><br><span class="line">  chassis.<span class="built_in">turn_to_angle</span>(<span class="number">-90</span>);</span><br><span class="line">  chassis.drive_max_voltage = <span class="number">6</span>;</span><br><span class="line">  chassis.<span class="built_in">drive_distance</span>(<span class="number">15</span>);</span><br><span class="line">  chassis.<span class="built_in">left_swing_to_angle</span>(<span class="number">0</span>);</span><br><span class="line">  chassis.drive_max_voltage = <span class="number">12</span>;</span><br><span class="line">  chassis.<span class="built_in">drive_distance</span>(<span class="number">10</span>);</span><br><span class="line">  chassis.<span class="built_in">drive_distance</span>(<span class="number">20</span>,chassis.desired_heading,<span class="number">12</span>,<span class="number">6</span>,<span class="number">1</span>,<span class="number">100</span>,<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>VEX,coding</tag>
      </tags>
  </entry>
  <entry>
    <title>first</title>
    <url>/11/23/2023/first/</url>
    <content><![CDATA[<h1 id="good-morning"><a href="#good-morning" class="headerlink" title="good morning"></a>good morning</h1><p>this is my first post for testing</p>
]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/11/23/2023/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
</search>
